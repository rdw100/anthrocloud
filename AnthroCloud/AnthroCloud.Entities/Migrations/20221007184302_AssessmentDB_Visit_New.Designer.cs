// <auto-generated />
using System;
using AnthroCloud.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnthroCloud.Entities.Migrations
{
    [DbContext(typeof(AssessmentContext))]
    [Migration("20221007184302_AssessmentDB_Visit_New")]
    partial class AssessmentDB_Visit_New
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AnthroCloud.Entities.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Sex")
                        .HasColumnType("tinyint");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            DateOfBirth = new DateTime(2021, 10, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "John",
                            LastName = "Smith",
                            Sex = (byte)0
                        },
                        new
                        {
                            PatientId = 2,
                            DateOfBirth = new DateTime(2020, 10, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            FirstName = "Juana",
                            LastName = "Diaz",
                            Sex = (byte)1
                        });
                });

            modelBuilder.Entity("AnthroCloud.Entities.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"), 1L, 1);

                    b.Property<DateTime>("DateOfVisit")
                        .HasColumnType("datetime2");

                    b.Property<double>("HeadCircumference")
                        .HasColumnType("float");

                    b.Property<double>("LengthHeight")
                        .HasColumnType("float");

                    b.Property<double>("MUAC")
                        .HasColumnType("float");

                    b.Property<int>("Measured")
                        .HasColumnType("int");

                    b.Property<byte>("Oedema")
                        .HasColumnType("tinyint");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<double>("SubscapularSkinFold")
                        .HasColumnType("float");

                    b.Property<double>("TricepsSkinFold")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("VisitId");

                    b.HasIndex("PatientId");

                    b.ToTable("Visits");

                    b.HasData(
                        new
                        {
                            VisitId = 1,
                            DateOfVisit = new DateTime(2022, 1, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            HeadCircumference = 45.0,
                            LengthHeight = 18.0,
                            MUAC = 15.0,
                            Measured = 1,
                            Oedema = (byte)1,
                            PatientId = 1,
                            SubscapularSkinFold = 7.0,
                            TricepsSkinFold = 8.0,
                            Weight = 16.0
                        },
                        new
                        {
                            VisitId = 2,
                            DateOfVisit = new DateTime(2022, 7, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            HeadCircumference = 45.0,
                            LengthHeight = 23.0,
                            MUAC = 15.0,
                            Measured = 1,
                            Oedema = (byte)1,
                            PatientId = 1,
                            SubscapularSkinFold = 7.0,
                            TricepsSkinFold = 8.0,
                            Weight = 20.0
                        },
                        new
                        {
                            VisitId = 3,
                            DateOfVisit = new DateTime(2021, 10, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            HeadCircumference = 45.0,
                            LengthHeight = 25.0,
                            MUAC = 15.0,
                            Measured = 1,
                            Oedema = (byte)1,
                            PatientId = 2,
                            SubscapularSkinFold = 7.0,
                            TricepsSkinFold = 8.0,
                            Weight = 26.0
                        },
                        new
                        {
                            VisitId = 4,
                            DateOfVisit = new DateTime(2021, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            HeadCircumference = 45.0,
                            LengthHeight = 28.0,
                            MUAC = 15.0,
                            Measured = 1,
                            Oedema = (byte)1,
                            PatientId = 2,
                            SubscapularSkinFold = 7.0,
                            TricepsSkinFold = 8.0,
                            Weight = 32.0
                        });
                });

            modelBuilder.Entity("AnthroCloud.Entities.Visit", b =>
                {
                    b.HasOne("AnthroCloud.Entities.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("AnthroCloud.Entities.Patient", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
