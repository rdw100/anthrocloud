@page "/Patient/Add"
@page "/Patient/Edit/{patientId:int}"
@using AnthroCloud.Entities
@using AnthroCloud.UI.Wasm.Services
@using Microsoft.Fast.Components.FluentUI
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<h3>@Title Child</h3>
<hr />
<EditForm class="w3-container w3-card" Model="@patient" OnValidSubmit="SavePatient">
    <DataAnnotationsValidator />
    <p>
        <label for="FirstName" class="w3-text">First Name</label>
        <InputText class="w3-input w3-border w3-round" @bind-Value="patient.FirstName" />
        <ValidationMessage For="@(() => patient.FirstName)" />
    </p>
    <p>
        <label for="LastName" class="w3-text">Last Name</label>
        <div class="col-md-4">
            <InputText class="w3-input w3-border w3-round" @bind-Value="patient.LastName" />
        </div>
        <ValidationMessage For="@(() => patient.LastName)" />
    </p>
    <p> 
        <label for="DateOfBirth" class="w3-text">Birth Date</label>
        <InputDate id="DateOfBirth"
            @bind-Value="patient.DateOfBirth"
            class="w3-input w3-border w3-round" />
        <ValidationMessage For="@(() => patient.DateOfBirth)" />
    </p>
    <p>
        <label for="Cellnumber" class="w3-text">Sex</label>
        <InputRadioGroup @bind-Value="patient.Sex">
            @foreach (var item in (Sexes[])Enum.GetValues(typeof(Sexes)))
            {
                <p>
                    <InputRadio class="w3-radio" Value="item" />
                    @item
                </p>

            }
        </InputRadioGroup>
        <ValidationMessage For="@(() => patient.Sex)" />
    </p>  
    <p> 
        <button type="submit" class="w3-btn w3-blue">Save</button>
        <button class="w3-btn w3-red" @onclick="Cancel">Cancel</button>
    </p>
</EditForm>
<br />
@code {
    [Inject]
    public IPatientService PatientService{ get; set; }

    [Parameter]
    public int patientId { get; set; }
    protected string Title = "Add";
    protected Patient patient = new();
    protected override async Task OnParametersSetAsync()
    {
        if (patientId != 0)
        {
            Title = "Edit";
            patient = await PatientService.GetPatient(patientId);
        }
    }
    protected async Task SavePatient()
    {
        if (patient.PatientId != 0)
        {
            await PatientService.UpdatePatient(patientId, patient);
        }
        else
        {
            await PatientService.CreatePatient(patient);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("Patient/details");
    }
}