@page "/Patient/Details"
@using AnthroCloud.Entities
@using AnthroCloud.Entities.Charts
@using AnthroCloud.UI.Wasm.Services
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<div class="w3-container">
    <h1>Individual Assessment</h1>
    <p>
        <a href='/patient/add' class="w3-button w3-blue" role="button">
            <i class="oi oi-plus"></i>
            Add Child
        </a>
    </p>
    <div class="w3-row">
        <div class="w3-col w3-right w3-container" style="width:75px">
            @if (SearchString.Length > 0)
            {
                <button class="w3-bar-item w3-button w3-red" @onclick="ResetSearch">
                    <i class="oi oi-x"></i>
                </button>
            }
            else
            {
                <button class="w3-bar-item w3-button w3-right" href="#"><i class="fa fa-search"></i></button>
            }
        </div>
        <div class="w3-rest">
            <input type="text" class="w3-input w3-border w3-padding" placeholder="Search patient by name"
                @bind="SearchString" @bind:event="oninput" @onkeyup="FilterPatient" />
        </div>
    </div>
    <br />
    @if (!patientList.Any())
    {
        <div>
            <div class="w3-spin">Loading ...</div>
        </div>    
    }
    else
    {
        <table class="w3-table-all w3-centered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Birth Date</th>
                    <th>Gender</th>
                    <th>&nbsp;</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var patient in patientList)
                {
                    <tr>
                        <td>
                            <a href="javascript: void(0);" @onclick="@(e => ShowVisits(@patient.PatientId))">@patient.PatientId</a>
                        </td>
                        <td>@patient.FirstName</td>
                        <td>@patient.LastName</td>
                        <td>@patient.DateOfBirth</td>
                        <td>@patient.Sex</td>
                        <td class="w3-right-align">
                                <a href='/patient/edit/@patient.PatientId' class="w3-button w3-green" role="button">
                                Edit
                            </a>
                                <a href='/patient/delete/@patient.PatientId' class="w3-button w3-red"role="button">
                                Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (visitList.Any())
        {
            <div class="w3-row">
                <p>
                    <a href='/visit/add/@visitList[0].PatientId' class="w3-button w3-blue" role="button">
                        <i class="oi oi-plus"></i>
                        Add Visit
                    </a>
                </p>
            </div>
                <table class="w3-table-all w3-centered">
                <thead>
                    <tr>
                        <th>Visit</th>
                        <th>Patient</th>
                        <th>Weight</th>
                        <th>Height</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var visit in visitList)
                    {
                        <tr>
                            <td>
                                <a href="javascript: void(0);" @onclick="@(e => ShowMeasures(@visit.VisitId))">@visit.VisitId</a>
                            </td>
                            <td>@visit.PatientId</td>
                            <td>@visit.Weight</td>
                            <td>@visit.LengthHeight</td>
                            <td class="w3-right-align">
                                    <a href='/visit/delete/@visit.VisitId' class="w3-button w3-red" role="button">
                                    Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>        
        }
        @if (measureList.Any())
        {
            <br />
                <table class="w3-table-all w3-centered">
                <thead>
                <tr>
                    <th>Measure</th>
                    <th>Percentile</th>
                    <th>Z-score</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var measure in measureList)
                {
                    <tr>
                        <td>@measure.Name</td>
                        <td>
                                <input type="range" min="0" max="100" value="@measure.Percentile">&nbsp;@measure.Percentile
                        </td>
                        <td style="background-color: @SetColor(measure.Zscore)">@measure.Zscore</td>
                    </tr>
                }
                </tbody>
            </table>
        }
    }
</div>
<br />
@code {
    [Inject]
    public IPatientService PatientService { get; set; }
    [Inject]
    public IVisitService VisitService { get; set; }
    [Inject]
    public IAnthroStatsService StatService {get; set; }

    protected List<Patient> patientList = new();
    protected List<Patient> searchPatientData = new();
    protected Patient patient = new();

    protected List<Visit> visitList = new();
    protected List<Visit> searchVisitData = new();
    protected Visit visit = new();

    protected List<Measure> measureList = new();

    protected string SearchString { get; set; } = string.Empty;
    protected override async Task OnInitializedAsync()
    {
        await GetPatient();
    }
    protected async Task GetPatient()
    {
        patientList = (await PatientService.GetPatients()).ToList();
        searchPatientData = patientList;
    }
    protected async Task ShowVisits(int patientId)
    {
        visitList = (await VisitService.GetVisits(patientId)).ToList();
    }
    protected async Task ShowMeasures(int visitId)
    {
        measureList = (await VisitService.GetVisitMeasures(visitId)).ToList();
    }
    protected void FilterPatient()
    {
        if (!string.IsNullOrEmpty(SearchString))
        {
            patientList = searchPatientData
                .Where(x => x.FirstName.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1 ||
                            x.LastName.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1      
                )
                .ToList();
        }
        else
        {
            patientList = searchPatientData;
        }
    }
    public void ResetSearch()
    {
        SearchString = string.Empty;
        patientList = searchPatientData;
    }
    public string SetColor(double zscore)
    {
        var colorCode = zscore switch
        {
            double n when (n <= 1 && n >= -1) => "#008000", //GREEN
            double n when (n <= -1 && n >= -2) || (n <= 2 && n > 1) => "#FFA500", //GOLD
            double n when (n < -2 && n >= -3) || (n <= 3 && n > 2) => "#FF0000", //RED
            double n when (n > 3 || n < -3) => "#808080", //BLACK
            _ => string.Empty,
        };
        return colorCode;
    }
}